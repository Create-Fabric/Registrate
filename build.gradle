plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
    id "io.freefair.lombok" version "6.1.0-m3"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id 'org.ajoberstar.grgit' version '4.1.0'
    id 'maven-publish'
}

boolean dev = System.getenv('RELEASE') == null || System.getenv('RELEASE').equals('false')
def getVersion = {
    def raw = grgit.describe(longDescr: true, tags:true)
    def desc = (raw == null ? '0.0-0-unknown' : grgit.describe(longDescr: true, tags:true)).split('-') as List
    def hash = desc.remove(desc.size() - 1).substring(1)
    def offset = desc.remove(desc.size() - 1)
    return project.mod_version.replace('x', offset) + (System.getenv("BUILD_NUMBER") == null ? "+${hash}" : '')
}

version = "MC${minecraft_version}-${getVersion()}"
group = "com.tterrag.registrate"
archivesBaseName = "Registrate"

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

dependencies {
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings minecraft.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:0.11.7"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.0'
}

lombok {
    version = "1.18.20"
    config['lombok.addJavaxGeneratedAnnotation'] = 'true'
}

delombok {
    format = [
        'suppressWarnings': 'skip',
        'javaLangAsFQN': 'skip'
    ]
}

java {
    withSourcesJar()
}

jar {
    exclude('assets/**', 'data/**', '.cache/**') // Exclude generated assets, can't find a better way to do this :(
    manifest {
        attributes(
            'FMLModType': 'LIBRARY'
        )
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.delombokTask
    exclude 'com.tterrag.registrate.test.*'
}

javadoc {
    source = delombok
    options.addStringOption('tag', 'apiNote:a:API Note:')
}

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourceJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        }
    }
}

repositories {
    maven {
        url 'https://repo.maven.apache.org/maven2'
        name 'Maven Central'
    }
}

String getChangelogText() {
    def changelogFile = file('changelog.txt')
    String str = ''
    int lineCount = 0
    boolean done = false
    changelogFile.eachLine {
        if (done || it == null) {
            return
        }
        if (it.size() > 1) {
            def temp = it
            if (lineCount == 0) {
                temp = "Chisel ${version}"
                temp = "<h2>$temp</h2>"
            } else if (it.startsWith('-')) {
                temp = "&nbsp;&nbsp;&nbsp;$temp"
                temp = temp.replaceAll("(\\S+\\/\\S+)#([0-9]+)\\b", "<a href=\"https://github.com/\$1/issues/\$2\">\$0</a>")
                temp = temp.replaceAll("#([0-9]+)\\b(?!<\\/a>)", "<a href=\"https://github.com/$github_project/issues/\$1\">\$0</a>")
            } else {
                temp = "<h4>$temp</h4>"
            }
            str += "$temp<br/>"
            lineCount++
            return
        } else {
            done = true
        }
    }
    return str
}